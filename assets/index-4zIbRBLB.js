(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function s(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(n){if(n.ep)return;n.ep=!0;const r=s(n);fetch(n.href,r)}})();window.securityConfig={hsts:{maxAge:31536e3,includeSubDomains:!0,preload:!0},headers:{"X-Frame-Options":"DENY","X-Content-Type-Options":"nosniff","X-XSS-Protection":"1; mode=block","Referrer-Policy":"strict-origin-when-cross-origin","Content-Security-Policy":`
            default-src 'self';
            script-src 'self' 'unsafe-inline' https://api.github.com;
            connect-src 'self' https://api.github.com;
            img-src 'self' https: data:;
            style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
            font-src 'self' https://fonts.gstatic.com;
            object-src 'none';
            media-src 'self';
            frame-src 'none';
            child-src 'none';
            form-action 'self';
            base-uri 'self';
            manifest-src 'self';
            worker-src 'self';
            upgrade-insecure-requests;
            block-all-mixed-content;
        `},dependencies:{allowedDependencies:["vite","vue","@vue/compiler-sfc"],versionPolicy:{major:"patch",minor:"patch",patch:"auto"},securityChecks:{enabled:!0,frequency:"daily",autoUpdate:!0,maxAge:30}},development:{localDevelopment:{disableHSTS:!0,disableSecurityHeaders:!1,allowInsecureRequests:!0},testing:{mockAPI:!0,disableCSRF:!0,allowLocalhost:!0}}};window.dependencyManager={async checkDependencies(){try{if(!this.isNpmInstalled())throw new Error("npm n'est pas installé");const t=await this.readPackageJson(),e=await this.checkForVulnerabilities(t);return e.length>0&&await this.updateDependencies(t,e),await this.checkVersions(t),{success:!0,message:"Vérification des dépendances terminée avec succès"}}catch(t){return console.error("Erreur lors de la vérification des dépendances:",t),{success:!1,message:"Erreur lors de la vérification des dépendances",error:t.message}}},isNpmInstalled(){try{return!!require("child_process").execSync("npm --version")}catch{return!1}},async readPackageJson(){try{const e=await require("fs").promises.readFile("package.json","utf8");return JSON.parse(e)}catch{throw new Error("Erreur lors de la lecture de package.json")}},async checkForVulnerabilities(t){try{const{execSync:e}=require("child_process"),s=e("npm audit").toString();return s.includes("found")?s:[]}catch{throw new Error("Erreur lors de la vérification des vulnérabilités")}},async updateDependencies(t,e){try{const{execSync:s}=require("child_process");s("npm audit fix"),s("npm outdated").toString()&&s("npm update")}catch{throw new Error("Erreur lors de la mise à jour des dépendances")}},async checkVersions(t){try{const e=securityConfig.dependencies.allowedDependencies;for(const s of Object.keys(t.dependencies))if(!e.includes(s))throw new Error(`Dépendance non autorisée: ${s}`)}catch{throw new Error("Erreur lors de la vérification des versions")}}};window.errorHandler={handleError(t,e){const s="Une erreur est survenue. Veuillez réessayer plus tard.";e&&(e.textContent=s,e.classList.remove("btn-success"),e.style.backgroundColor="#ccc",e.setAttribute("disabled","disabled")),console.error("Erreur détaillée:",t)},handleApiError(t,e){let s="Une erreur est survenue. Veuillez réessayer plus tard.";t.response?s=`Erreur API: ${t.response.status} - ${t.response.statusText}`:t.request?s="Pas de réponse du serveur":t.message.includes("Network")?s="Erreur réseau - Vérifiez votre connexion":s="Erreur de configuration de la requête",e&&(e.textContent=s,e.classList.remove("btn-success"),e.style.backgroundColor="#ccc",e.setAttribute("disabled","disabled")),console.error("Erreur détaillée:",t)},validateUrl(t){try{const e=new URL(t);return e.protocol==="https:"&&(e.hostname==="github.com"||e.hostname==="raw.githubusercontent.com")}catch{return!1}}};const l={github:{token:"",clientId:void 0,clientSecret:void 0,redirectUri:"https://drrakendu78.github.io/TradSC-docs/callback"},validateUrl(t){try{const e=new URL(t);return!(e.protocol!=="https:"||!["github.com","raw.githubusercontent.com","api.github.com"].some(i=>e.hostname===i||e.hostname.endsWith("."+i))||e.hostname==="raw.githubusercontent.com"&&!e.pathname.startsWith("/drrakendu78/TradSC-docs/"))}catch{return!1}},addCsrfToken(){const t=crypto.randomUUID();return document.cookie=`csrf_token=${t}; Secure; SameSite=Strict`,t},verifyCsrfToken(t){const e=document.cookie.split("; ").find(s=>s.startsWith("csrf_token="));return e?e.split("=")[1]===t:!1},escapeHtml(t){return t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")},handleError(t,e){const s="Une erreur est survenue. Veuillez réessayer plus tard.";e&&(e.textContent=s,e.classList.remove("btn-success"),e.style.backgroundColor="#dc3545",e.hasAttribute("disabled")&&e.setAttribute("disabled","disabled")),console.error("Erreur détaillée:",t)},secureFetch(t,e={}){return new Promise((s,i)=>{try{if(!this.validateUrl(t)){i(new Error("URL non sécurisée"));return}const n={...e,headers:{...e.headers,Accept:"application/vnd.github.v3+json","User-Agent":"TradSC-docs"},mode:"cors",credentials:"omit"};t.includes("api.github.com")&&this.github.token&&(n.headers.Authorization="Bearer "+this.github.token),fetch(t,n).then(r=>{if(!r.ok){i(new Error(`HTTP error! status: ${r.status}`));return}s(r)}).catch(r=>{this.handleError(r),i(r)})}catch(n){this.handleError(n),i(n)}})},async authenticateGitHub(){try{if(this.github.token)return!0;const t=`https://github.com/login/oauth/authorize?client_id=${this.github.clientId}&redirect_uri=${encodeURIComponent(this.github.redirectUri)}&scope=repo`,e=window.open(t,"_blank","width=600,height=800");return await new Promise(i=>{const n=r=>{if(r.origin==="https://drrakendu78.github.io")try{const o=JSON.parse(r.data);o.code&&fetch("https://github.com/login/oauth/access_token",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({client_id:this.github.clientId,client_secret:this.github.clientSecret,code:o.code})}).then(c=>c.json()).then(c=>{c.access_token?(this.github.token=c.access_token,i(!0)):i(!1)}).catch(c=>{console.error("Erreur lors de l'échange du code:",c),i(!1)})}catch{i(!1)}};window.addEventListener("message",n,!1),setTimeout(()=>{window.removeEventListener("message",n),e.close()},3e5)})}catch(t){return console.error("Erreur lors de l'authentification GitHub:",t),!1}},async testAuthentication(){try{if(console.log("Début du test d'authentification..."),this.github.token)return console.log("Déjà authentifié avec un token valide"),!0;if(await this.authenticateGitHub()){console.log("Authentification réussie !"),console.log("Token obtenu:",this.github.token);const s=await(await this.secureFetch("https://api.github.com/user")).json();return console.log("Données utilisateur:",s),!0}else return console.error("Authentification échouée"),!1}catch(t){return console.error("Erreur lors du test:",t),!1}}};document.addEventListener("DOMContentLoaded",()=>{const t=document.getElementById("theme-toggle"),e=localStorage.getItem("theme"),s=window.matchMedia("(prefers-color-scheme: dark)").matches;e==="dark"||!e&&s?(document.body.classList.remove("light-theme"),document.body.classList.add("dark-theme")):(document.body.classList.add("light-theme"),document.body.classList.remove("dark-theme")),t.addEventListener("click",()=>{document.body.classList.contains("light-theme")?(document.body.classList.remove("light-theme"),document.body.classList.add("dark-theme"),localStorage.setItem("theme","dark")):(document.body.classList.remove("dark-theme"),document.body.classList.add("light-theme"),localStorage.setItem("theme","light"))})});document.addEventListener("DOMContentLoaded",()=>{const t=document.querySelectorAll(".fade-in, .slide-in-right, .slide-in-left"),e={root:null,rootMargin:"0px",threshold:.1},s=new IntersectionObserver((i,n)=>{i.forEach(r=>{r.isIntersecting&&(r.target.classList.add("animate"),n.unobserve(r.target))})},e);t.forEach(i=>{s.observe(i)}),document.querySelectorAll('a[href^="#"]').forEach(i=>{i.addEventListener("click",function(n){const r=this.getAttribute("href");if(r&&r.startsWith("#")){n.preventDefault();const o=document.querySelector(r);o&&o.scrollIntoView({behavior:"smooth",block:"start"})}})})});function m(t){return`https://raw.githubusercontent.com/drrakendu78/TradSC-docs/main/public/${t}`}function p(){document.querySelectorAll("img").forEach(t=>{t.setAttribute("crossorigin","anonymous"),t.setAttribute("referrerpolicy","strict-origin-when-cross-origin");const e=t.getAttribute("src");e&&!l.validateUrl(e)?(console.warn(`URL non sécurisée détectée: ${e}`),t.style.display="none"):t.src=l.escapeHtml(e)})}document.addEventListener("DOMContentLoaded",()=>{const t=["Capture-ecran-2025-05-11-170607.png","capture-ecran-2025-05-11-171534.png","Capture-ecran-2025-05-11-222124.png","Capture-ecran-2025-05-11-222132.png","Capture-ecran-2025-05-11-222138.png","Capture-ecran-2025-05-11-222151.png","Capture-ecran-2025-05-11-222158.png","Capture-ecran-2025-05-14-044458.png","Capture-ecran-2025-05-14-152224.png"];let e=0;setInterval(()=>{const r=document.getElementById("hero-slideshow");r&&(r.src=l.escapeHtml(m(t[e]))),e=(e+1)%t.length},3500);const s=["smartscreen_info.png","smartscreen_run.png"];let i=0;setInterval(()=>{const r=document.getElementById("smartscreen-slideshow");r&&(r.src=l.escapeHtml(m(s[i]))),i=(i+1)%s.length},3500),p();async function n(){try{const r=document.getElementById("download-msi"),o=document.getElementById("download-msi-install");r&&(r.textContent="Chargement...",r.classList.remove("btn-success"),r.style.backgroundColor="#ccc",r.setAttribute("disabled","disabled")),o&&(o.textContent="Chargement...",o.classList.remove("btn-success"),o.style.backgroundColor="#ccc",o.setAttribute("disabled","disabled"));const a=await l.secureFetch("https://api.github.com/repos/drrakendu78/TradSC/releases/latest",{headers:{Accept:"application/vnd.github.v3+json","User-Agent":"TradSC-docs"},mode:"cors",credentials:"omit",referrerPolicy:"strict-origin-when-cross-origin"});if(!a.ok)throw new Error(`HTTP error! status: ${a.status}`);const u=await a.json();if(!u||!u.assets||!Array.isArray(u.assets))throw new Error("Réponse API invalide");const d=u.assets.find(h=>h.name&&h.name.endsWith(".msi")&&h.browser_download_url&&h.browser_download_url.startsWith("https://"));if(!d)throw new Error("Aucun fichier MSI sécurisé trouvé");if(!new URL(d.browser_download_url).hostname.endsWith("github.com"))throw new Error("URL de téléchargement non sécurisée");r&&(r.textContent="Télécharger l'application (.msi)",r.classList.add("btn-success"),r.style.backgroundColor="#28a745",r.removeAttribute("disabled"),r.href=l.escapeHtml(d.browser_download_url),r.setAttribute("download",l.escapeHtml(d.name)),r.title="Télécharger uniquement le fichier d'installation (.msi)"),o&&(o.textContent="Télécharger et installer maintenant",o.classList.add("btn-success"),o.style.backgroundColor="#28a745",o.removeAttribute("disabled"),o.href=l.escapeHtml(d.browser_download_url),o.setAttribute("download",l.escapeHtml(d.name)),o.title="Télécharger le fichier d'installation (.msi) et lancer l'installation immédiatement")}catch(r){const o="Une erreur est survenue lors du téléchargement. Veuillez réessayer plus tard.",c=document.getElementById("download-msi"),a=document.getElementById("download-msi-install");c&&(c.textContent=o,c.classList.remove("btn-success"),c.style.backgroundColor="#dc3545",c.setAttribute("disabled","disabled")),a&&(a.textContent=o,a.classList.remove("btn-success"),a.style.backgroundColor="#dc3545",a.setAttribute("disabled","disabled")),console.error("Erreur détaillée:",r)}}n()});
